---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
---

<Layout title="Welcome to Astro.">
  <main>
    <h1 style="margin-bottom: 25px">
      <a href="/">Welcome to <span class="text-gradient">Astro</span></a>
    </h1>
    <Card title="Response Header" body="Validate server-side response headers">
      <pre
        class="instructions"
        id="headers-response">
      Fetching document headers
    </pre>
      <div id="result" class="result"></div>
      <script>
        const outputEle = document.getElementById("headers-response");
        const resultEle = document.getElementById("result");
        const targetHeader = "x-custom-test";
        fetch("/").then((resp) => {
          const jsonHeaders = JSON.stringify(
            Array.from(resp.headers.keys()).reduce(
              (obj, k) => ({ ...obj, [k]: resp.headers.get(k) }),
              {}
            ),
            null,
            "  "
          );
          outputEle.innerHTML = jsonHeaders;
          jsonHeaders.includes(targetHeader)
            ? !resultEle.classList.add("success") &&
              resultEle.setHTML("Success")
            : !resultEle.classList.add("fail") &&
              resultEle.setHTML("Header Not Returned");
        });
      </script>
    </Card>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions pre {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
  .result {
    border-radius: 17px;
    margin: 10px auto;
    padding: 8px 10px;
    font-weight: bold;
    color: #fff;
    max-width: 300px;
    text-align: center;
  }
  .result.fail {
    background-color: red;
  }
  .result.success {
    background-color: rgb(0, 137, 62);
  }
</style>
